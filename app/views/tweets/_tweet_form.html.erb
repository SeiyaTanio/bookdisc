<div class="container container-style">
  <div class="row pb-3">
    <%= form_with model: @tweet_form, url: url, method: method, class: "needs-validation", html: {novalidate: true}, local: true do |f| %>
      <div class="col-8 mx-auto">
        <div class="row sticky-nav p-1 bg-primary">
          <div class="d-flex align-items-center">
            <div class="col-4">
            </div>
            <div class="col-4">
              <div class="text-center text-white">
                <% if controller.action_name == "new"%>
                  New Tweet
                <% else %>
                  Edit Tweet
                <% end %>
              </div>
            </div>
            <div class="col-4">
              <div class="text-end">
                <% if controller.action_name == "new" %>
                  <%= f.submit "投稿", class:"btn btn-outline-light"%>
                <% else %>
                  <%= f.submit "更新", class:"btn btn-outline-light"%>
                <% end %>
              </div>
            </div>
          </div>
        </div>
        <div class="row border mb-5 px-3 pt-4">
          <%= render 'shared/post_user' %>
          <div class="row g-0 my-4">
            <div class="mb-2">
              <%= f.text_area :content, class: "form-control", placeholder: 'ツイートしましょう（150文字まで）【必須】', maxlength: "150", rows: "7", autofocus: true, required: true %>
              <div class="invalid-feedback">
                内容を入力してください
              </div>
            </div>
          </div>
          <div class="row g-0 mb-4">
            <%= f.text_field :t_tag_name, class: "form-control ",placeholder: 'タグ（40文字まで）',maxlength: "40", autocomplete: "t_tag_name" %>
            <div id="search-result" class="mt-1"></div>
          </div>
        </div>
      </div>
    <% end %>
  </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", () => {
const  tTagNameInput = document.querySelector("#tweet_form_t_tag_name");
  if (tTagNameInput){
    const inputElement = document.getElementById("tweet_form_t_tag_name");
    inputElement.addEventListener("input", () => {
      const keyword = document.getElementById("tweet_form_t_tag_name").value;
      const XHR = new XMLHttpRequest();
      XHR.open("GET", `/tweets/search/?keyword=${keyword}`, true);
      XHR.responseType = "json";
      XHR.send();
      XHR.onload = () => {
        const searchResult = document.getElementById("search-result");
        searchResult.innerHTML = "";
        if (XHR.response) {
          const tTagName = XHR.response.keyword;
          tTagName.forEach((tag) => {
            const childElement = document.createElement("button");
            childElement.setAttribute("type", "button");
            childElement.setAttribute("class", "child list-group-item list-group-item-action");
            childElement.setAttribute("id", tag.id);
            childElement.innerHTML = tag.t_tag_name;
            searchResult.appendChild(childElement);
            const clickElement = document.getElementById(tag.id);
            clickElement.addEventListener("click", () => {
              document.getElementById("tweet_form_t_tag_name").value = clickElement.textContent;
              clickElement.remove();
              searchResult.innerHTML = "";
            });
          });
        };
      };
    });
  };
});
</script>

<script>
  (function () {
    'use strict';
      var forms = document.querySelectorAll('.needs-validation')
      Array.prototype.slice.call(forms)
        .forEach(function (form) {
          form.addEventListener('submit', function (event) {
            if (!form.checkValidity()) {
              event.preventDefault()
              event.stopPropagation()
            }
            form.classList.add('was-validated')
          }, false)
        })
  })()
</script>